{"version":3,"file":"qr-scanner.umd.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n    static async hasCamera() {\n        try {\n            return !!(await QrScanner.listCameras(false)).length;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    static async listCameras(requestLabels = false) {\n        if (!navigator.mediaDevices) return [];\n\n        // Note that enumerateDevices can always be called and does not prompt the user for permission.\n        // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n        // or permission to access the camera was given. Therefore, ask for camera permission by opening a stream, if\n        // labels were requested.\n        let openedStream = null;\n        if (requestLabels) {\n            try {\n                openedStream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n            } catch (e) {\n                // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in\n                // use and some browsers disallow a second stream.\n            }\n        }\n        try {\n            const devices = await navigator.mediaDevices.enumerateDevices();\n            return devices.filter(device => device.kind === 'videoinput').map((device, i) => ({\n                id: device.deviceId,\n                label: device.label || (i === 0 ? 'Default Camera' : `Camera ${i + 1}`),\n            }));\n        } finally {\n            // close the stream we just opened for getting camera access for listing the device labels\n            if (openedStream) {\n                for (const track of openedStream.getTracks()) {\n                    track.stop();\n                    openedStream.removeTrack(track);\n                }\n            }\n        }\n    }\n\n    constructor(\n        video,\n        onDecode,\n        canvasSizeOrOnDecodeError = this._onDecodeError,\n        canvasSizeOrCalculateScanRegion = this._calculateScanRegion,\n        preferredCamera = 'environment'\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._legacyCanvasSize = QrScanner.DEFAULT_CANVAS_SIZE;\n        this._preferredCamera = preferredCamera;\n        this._active = false;\n        this._paused = false;\n        this._flashOn = false;\n\n        if (typeof canvasSizeOrOnDecodeError === 'number') {\n            // legacy function signature where the third argument is the canvas size\n            this._legacyCanvasSize = canvasSizeOrOnDecodeError;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._onDecodeError = canvasSizeOrOnDecodeError;\n        }\n\n        if (typeof canvasSizeOrCalculateScanRegion === 'number') {\n            // legacy function signature where the fourth argument is the canvas size\n            this._legacyCanvasSize = canvasSizeOrCalculateScanRegion;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._calculateScanRegion = canvasSizeOrCalculateScanRegion;\n        }\n\n        this._scanRegion = this._calculateScanRegion(video);\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        video.disablePictureInPicture = true;\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        video.muted = true;\n\n        // Avoid Safari stopping the video stream on a hidden video.\n        // See https://github.com/cozmo/jsQR/issues/185\n        let shouldHideVideo = false;\n        if (video.hidden) {\n            video.hidden = false;\n            shouldHideVideo = true;\n        }\n        if (!document.body.contains(video)) {\n            document.body.appendChild(video);\n            shouldHideVideo = true;\n        }\n        requestAnimationFrame(() => {\n            // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n            const computedStyle = window.getComputedStyle(video);\n            if (computedStyle.display === 'none') {\n                video.style.setProperty('display', 'block', 'important');\n                shouldHideVideo = true;\n            }\n            if (computedStyle.visibility !== 'visible') {\n                video.style.setProperty('visibility', 'visible', 'important');\n                shouldHideVideo = true;\n            }\n            if (shouldHideVideo) {\n                // Hide the video in a way that doesn't cause Safari to stop the playback.\n                console.warn('QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.');\n                video.style.opacity = 0;\n                video.style.width = 0;\n                video.style.height = 0;\n            }\n        });\n\n        video.addEventListener('play', this._onPlay);\n        video.addEventListener('loadedmetadata', this._onLoadedMetaData);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    async hasFlash() {\n        let stream = null;\n        try {\n            stream = this.$video.srcObject || (await this._getCameraStream()).stream;\n            return 'torch' in stream.getVideoTracks()[0].getSettings();\n        } catch (e) {\n            return false;\n        } finally {\n            // close the stream we just opened for detecting whether it supports flash\n            if (stream && stream !== this.$video.srcObject) {\n                console.warn('Call hasFlash after successfully starting the scanner to avoid creating '\n                    + 'a temporary video stream');\n                for (const track of stream.getTracks()) {\n                    track.stop();\n                    stream.removeTrack(track);\n                }\n            }\n        }\n    }\n\n    isFlashOn() {\n        return this._flashOn;\n    }\n\n    async toggleFlash() {\n        if (this._flashOn) {\n            await this.turnFlashOff();\n        } else {\n            await this.turnFlashOn();\n        }\n    }\n\n    async turnFlashOn() {\n        if (this._flashOn) return;\n        this._flashOn = true;\n        if (!this._active || this._paused) return; // flash will be turned on later on .start()\n        try {\n            if (!await this.hasFlash()) throw 'No flash available';\n            // Note that the video track is guaranteed to exist at this point\n            await this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n                advanced: [{ torch: true }],\n            });\n        } catch (e) {\n            this._flashOn = false;\n            throw e;\n        }\n    }\n\n    async turnFlashOff() {\n        if (!this._flashOn) return;\n        // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n        // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n        // we have to stop the stream to turn the flashlight off.\n        this._flashOn = false;\n        await this._restartVideoStream();\n    }\n\n    destroy() {\n        this.$video.removeEventListener('loadedmetadata', this._onLoadedMetaData);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    async start() {\n        if (this._active && !this._paused) return;\n\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n\n        this._active = true;\n        if (document.hidden) return; // camera will be started as soon as tab is in foreground\n        this._paused = false;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return;\n        }\n\n        try {\n            const { stream, facingMode } = await this._getCameraStream();\n            this.$video.srcObject = stream;\n            this.$video.play();\n            this._setVideoMirror(facingMode);\n\n            // Restart the flash if it was previously on\n            if (this._flashOn) {\n                this._flashOn = false; // force turnFlashOn to restart the flash\n                this.turnFlashOn().catch(() => {});\n            }\n        } catch (e) {\n            this._active = false;\n            throw e;\n        }\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    async pause(stopStreamImmediately = false) {\n        this._paused = true;\n        if (!this._active) return true;\n        this.$video.pause();\n\n        const stopStream = () => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop(); //  note that this will also automatically turn the flashlight off\n                this.$video.srcObject.removeTrack(track);\n            }\n            this.$video.srcObject = null;\n        };\n\n        if (stopStreamImmediately) {\n            stopStream();\n            return true;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, 300));\n        if (!this._paused) return false;\n        stopStream();\n        return true;\n    }\n\n    async setCamera(facingModeOrDeviceId) {\n        if (facingModeOrDeviceId === this._preferredCamera) return;\n        this._preferredCamera = facingModeOrDeviceId;\n        // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n        await this._restartVideoStream();\n    }\n\n    static async scanImage(\n        imageOrFileOrUrl,\n        scanRegion = null,\n        qrEngine = null,\n        canvas = null,\n        disallowCanvasResizing = false,\n        alsoTryWithoutScanRegion = false\n    ) {\n        const gotExternalEngine = !!qrEngine;\n\n        try {\n            let image;\n            let canvasContext;\n            [qrEngine, image] = await Promise.all([\n                qrEngine || QrScanner.createQrEngine(),\n                QrScanner._loadImage(imageOrFileOrUrl),\n            ]);\n            [canvas, canvasContext] = this._drawToCanvas(image, scanRegion, canvas, disallowCanvasResizing);\n\n            if (qrEngine instanceof Worker) {\n                if (!gotExternalEngine) {\n                    // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n                    qrEngine.postMessage({ type: 'inversionMode', data: 'both' });\n                }\n                return await new Promise((resolve, reject) => {\n                    let timeout, onMessage, onError;\n                    onMessage = event => {\n                        if (event.data.type !== 'qrResult') {\n                            return;\n                        }\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve(event.data.data);\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (e) => {\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngine.addEventListener('message', onMessage);\n                    qrEngine.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);\n                    qrEngine.postMessage({\n                        type: 'decode',\n                        data: imageData\n                    }, [imageData.data.buffer]);\n                });\n            } else {\n                return await Promise.race([\n                    new Promise((resolve, reject) => window.setTimeout(() => reject('Scanner error: timeout'), 10000)),\n                    (async () => {\n                        try {\n                            const [scanResult] = await qrEngine.detect(canvas);\n                            if (!scanResult) throw QrScanner.NO_QR_CODE_FOUND;\n                            return scanResult.rawValue;\n                        } catch (e) {\n                            throw `Scanner error: ${e instanceof Error ? e.message : e}`;\n                        }\n                    })(),\n                ]);\n            }\n        } catch (e) {\n            if (!scanRegion || !alsoTryWithoutScanRegion) throw e;\n            return await QrScanner.scanImage(imageOrFileOrUrl, null, qrEngine, canvas, disallowCanvasResizing);\n        } finally {\n            if (!gotExternalEngine) {\n                QrScanner._postWorkerMessage(qrEngine, 'close');\n            }\n        }\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n        // well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n        // and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    static async createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n        const hasNativeBarcodeDetector = 'BarcodeDetector' in window && BarcodeDetector.getSupportedFormats\n            ? (await BarcodeDetector.getSupportedFormats()).includes('qr_code')\n            : false;\n        return hasNativeBarcodeDetector ? new BarcodeDetector({ formats: ['qr_code'] }) : new Worker(workerPath);\n    }\n\n    _onPlay() {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._scanFrame();\n    }\n\n    _onLoadedMetaData() {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _calculateScanRegion(video) {\n        // Default scan region calculation. Note that this can be overwritten in the constructor.\n        const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n        const scanRegionSize = Math.round(2 / 3 * smallestDimension);\n        return {\n            x: Math.round((video.videoWidth - scanRegionSize) / 2),\n            y: Math.round((video.videoHeight - scanRegionSize) / 2),\n            width: scanRegionSize,\n            height: scanRegionSize,\n            downScaledWidth: this._legacyCanvasSize,\n            downScaledHeight: this._legacyCanvasSize,\n        };\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(async () => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n\n            let result;\n            try {\n                result = await QrScanner.scanImage(\n                    this.$video,\n                    this._scanRegion,\n                    this._qrEnginePromise,\n                    this.$canvas\n                );\n            } catch (error) {\n                if (!this._active) return;\n                const errorMessage = error.message || error;\n                if (errorMessage.includes('service unavailable')) {\n                    // When the native BarcodeDetector crashed, create a new one\n                    this._qrEnginePromise = QrScanner.createQrEngine();\n                }\n                this._onDecodeError(error);\n            }\n\n            if (result) {\n                this._onDecode(result);\n            }\n\n            this._scanFrame();\n        });\n    }\n\n    _onDecodeError(error) {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    async _getCameraStream() {\n        if (!navigator.mediaDevices) throw 'Camera not found.';\n\n        const preferenceType = this._preferredCamera === 'environment' || this._preferredCamera === 'user'\n            ? 'facingMode'\n            : 'deviceId';\n        const constraintsWithoutCamera = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n        const constraintsWithCamera = constraintsWithoutCamera.map((constraint) => Object.assign({}, constraint, {\n            [preferenceType]: { exact: this._preferredCamera },\n        }));\n\n        for (const constraints of [...constraintsWithCamera, ...constraintsWithoutCamera]) {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: constraints, audio: false });\n                // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n                // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n                // mode, even for exact facingMode constraints.\n                const facingMode = this._getFacingMode(stream)\n                    || (constraints.facingMode\n                        ? this._preferredCamera // _preferredCamera is a facing mode and we are able to fulfill it\n                        : (this._preferredCamera === 'environment'\n                            ? 'user' // switch as _preferredCamera was environment but we are not able to fulfill it\n                            : 'environment' // switch from unfulfilled user facingMode or default to environment\n                        )\n                    );\n                return { stream, facingMode };\n            } catch (e) {}\n        }\n\n        throw 'Camera not found.';\n    }\n\n    async _restartVideoStream() {\n        // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n        // stream might still be running, as it's by default only stopped after a delay of 300ms.\n        const wasPaused = this._paused;\n        const paused = await this.pause(true);\n        if (!paused || wasPaused || !this._active) return;\n        await this.start();\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _getFacingMode(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    static _drawToCanvas(image, scanRegion=null, canvas=null, disallowCanvasResizing=false) {\n        canvas = canvas || document.createElement('canvas');\n        const scanRegionX = scanRegion && scanRegion.x? scanRegion.x : 0;\n        const scanRegionY = scanRegion && scanRegion.y? scanRegion.y : 0;\n        const scanRegionWidth = scanRegion && scanRegion.width? scanRegion.width : image.width || image.videoWidth;\n        const scanRegionHeight = scanRegion && scanRegion.height? scanRegion.height : image.height || image.videoHeight;\n\n        if (!disallowCanvasResizing) {\n            const canvasWidth = scanRegion && scanRegion.downScaledWidth\n                ? scanRegion.downScaledWidth\n                : scanRegionWidth;\n            const canvasHeight = scanRegion && scanRegion.downScaledHeight\n                ? scanRegion.downScaledHeight\n                : scanRegionHeight;\n            // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n            // set them if they actually changed.\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(\n            image,\n            scanRegionX, scanRegionY, scanRegionWidth, scanRegionHeight,\n            0, 0, canvas.width, canvas.height\n        );\n        return [canvas, context];\n    }\n\n    static async _loadImage(imageOrFileOrBlobOrUrl) {\n        if (imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement || imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrBlobOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas) {\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n            await QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl);\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof(imageOrFileOrBlobOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl;\n            }\n            try {\n                await QrScanner._awaitImageLoad(image);\n                return image;\n            } finally {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n            }\n        } else {\n            throw 'Unsupported image type.';\n        }\n    }\n\n    static async _awaitImageLoad(image) {\n        if (image.complete && image.naturalWidth !== 0) return; // already loaded\n        await new Promise((resolve, reject) => {\n            let onLoad, onError;\n            onLoad = () => {\n                image.removeEventListener('load', onLoad);\n                image.removeEventListener('error', onError);\n                resolve();\n            };\n            onError = () => {\n                image.removeEventListener('load', onLoad);\n                image.removeEventListener('error', onError);\n                reject('Image load error');\n            };\n            image.addEventListener('load', onLoad);\n            image.addEventListener('error', onError);\n        });\n    }\n\n    static async _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n        const qrEngine = await qrEngineOrQrEnginePromise;\n        if (!(qrEngine instanceof Worker)) return;\n        qrEngine.postMessage({ type, data });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = 'No QR code found';\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n"],"names":["QrScanner","hasCamera","length","listCameras","e","requestLabels","navigator","mediaDevices","openedStream","getUserMedia","audio","video","filter","device","kind","map","i","id","deviceId","label","track","stop","removeTrack","constructor","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","canvasSizeOrCalculateScanRegion","_calculateScanRegion","preferredCamera","$video","$canvas","document","createElement","_onDecode","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_flashOn","_paused","_active","console","warn","_scanRegion","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","disablePictureInPicture","playsInline","muted","shouldHideVideo","hidden","body","contains","appendChild","requestAnimationFrame","computedStyle","display","style","setProperty","visibility","opacity","width","height","addEventListener","_qrEnginePromise","createQrEngine","hasFlash","stream","srcObject","_getCameraStream","getVideoTracks","getSettings","isFlashOn","toggleFlash","turnFlashOff","turnFlashOn","applyConstraints","advanced","torch","_restartVideoStream","destroy","removeEventListener","_postWorkerMessage","start","window","location","protocol","play","facingMode","_setVideoMirror","catch","pause","stopStreamImmediately","tracks","getTracks","stopStream","Promise","resolve","setTimeout","setCamera","facingModeOrDeviceId","scanImage","imageOrFileOrUrl","scanRegion","qrEngine","canvas","disallowCanvasResizing","alsoTryWithoutScanRegion","image","canvasContext","all","_loadImage","_drawToCanvas","Worker","gotExternalEngine","postMessage","type","data","reject","timeout","onMessage","onError","event","clearTimeout","NO_QR_CODE_FOUND","message","imageData","buffer","race","scanResult","rawValue","Error","setGrayscaleWeights","red","green","blue","useIntegerApproximation","setInversionMode","inversionMode","workerPath","WORKER_PATH","includes","BarcodeDetector","getSupportedFormats","formats","_scanFrame","x","Math","round","videoWidth","scanRegionSize","y","videoHeight","downScaledWidth","downScaledHeight","paused","ended","readyState","result","error","log","min","constraint","preferenceType","exact","constraints","wasPaused","transform","_getFacingMode","videoStream","test","videoTrack","scanRegionWidth","scanRegionHeight","canvasWidth","canvasHeight","alpha","context","imageSmoothingEnabled","drawImage","scanRegionX","scanRegionY","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad","qrEngineOrQrEnginePromise"],"mappings":"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"}