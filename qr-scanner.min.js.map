{"version":3,"file":"qr-scanner.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n        // labels are only readable if served via https and an active media stream exists or permanent permission is\n        // given. That doesn't matter for us though as we don't require labels.\n        return !!navigator.mediaDevices && navigator.mediaDevices.enumerateDevices()\n            .then(devices => devices.some(device => device.kind === 'videoinput'))\n            .catch(() => false);\n    }\n\n    /* async */\n    hasFlash() {\n      if (!('ImageCapture' in window)) {\n        return Promise.resolve(false);\n      }\n\n      const imageCapture = new ImageCapture(this._getCameraTrack());\n      return imageCapture.getPhotoCapabilities()\n        .then((result) => {\n          return result.fillLightMode.includes('flash');\n        })\n        .catch((error) => {\n          console.warn(error);\n          return false;\n        })\n    }\n\n    constructor(\n        video,\n        onDecode,\n        canvasSizeOrOnDecodeError = this._onDecodeError.bind(this),\n        canvasSize = QrScanner.DEFAULT_CANVAS_SIZE,\n        preferredFacingMode = 'environment'\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._preferredFacingMode = preferredFacingMode;\n        this._active = false;\n        this._paused = false;\n        this._flashOn = false;\n\n        if (typeof canvasSizeOrOnDecodeError === 'number') {\n            // legacy function signature where canvas size is the third argument\n            canvasSize = canvasSizeOrOnDecodeError;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._onDecodeError = canvasSizeOrOnDecodeError;\n        }\n\n        this.$canvas.width = canvasSize;\n        this.$canvas.height = canvasSize;\n        this._sourceRect = {\n            x: 0,\n            y: 0,\n            width: canvasSize,\n            height: canvasSize\n        };\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        this.$video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        this.$video.muted = true;\n        this.$video.disablePictureInPicture = true;\n        this.$video.addEventListener('play', this._onPlay);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrWorker = new Worker(QrScanner.WORKER_PATH);\n    }\n\n    isFlashOn() {\n      return this._flashOn;\n    }\n\n    toggleFlash() {\n      this._setFlashOn(!this._flashOn);\n    }\n\n    turnFlashOff() {\n      this._setFlashOn(false);\n    }\n\n    turnFlashOn() {\n      this._setFlashOn(true);\n    }\n\n    destroy() {\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        this._qrWorker.postMessage({\n            type: 'close'\n        });\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        this._paused = false;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        clearTimeout(this._offTimeout);\n        this._offTimeout = null;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        let facingMode = this._preferredFacingMode;\n        return this._getCameraStream(facingMode, true)\n            .catch(() => {\n                // We (probably) don't have a camera of the requested facing mode\n                facingMode = facingMode === 'environment' ? 'user' : 'environment';\n                return this._getCameraStream(); // throws if camera is not accessible (e.g. due to not https)\n            })\n            .then(stream => {\n                // Try to determine the facing mode from the stream, otherwise use our guess. Note that the guess is not\n                // always accurate as Safari returns cameras of different facing mode, even for exact constraints.\n                facingMode = this._getFacingMode(stream) || facingMode;\n                this.$video.srcObject = stream;\n                this.$video.play();\n                this._setVideoMirror(facingMode);\n            })\n            .catch(e => {\n                this._active = false;\n                throw e;\n            });\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    pause() {\n        this._paused = true;\n        if (!this._active) {\n            return;\n        }\n        this.$video.pause();\n        if (this._offTimeout) {\n            return;\n        }\n        this._offTimeout = setTimeout(() => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop();\n            }\n            this.$video.srcObject = null;\n            this._offTimeout = null;\n        }, 300);\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, sourceRect=null, worker=null, canvas=null, fixedCanvasSize=false,\n                     alsoTryWithoutSourceRect=false) {\n        let createdNewWorker = false;\n        let promise = new Promise((resolve, reject) => {\n            if (!worker) {\n                worker = new Worker(QrScanner.WORKER_PATH);\n                createdNewWorker = true;\n                worker.postMessage({ type: 'inversionMode', data: 'both' }); // scan inverted color qr codes too\n            }\n            let timeout, onMessage, onError;\n            onMessage = event => {\n                if (event.data.type !== 'qrResult') {\n                    return;\n                }\n                worker.removeEventListener('message', onMessage);\n                worker.removeEventListener('error', onError);\n                clearTimeout(timeout);\n                if (event.data.data !== null) {\n                    resolve(event.data.data);\n                } else {\n                    reject(QrScanner.NO_QR_CODE_FOUND);\n                }\n            };\n            onError = (e) => {\n                worker.removeEventListener('message', onMessage);\n                worker.removeEventListener('error', onError);\n                clearTimeout(timeout);\n                const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                reject('Scanner error: ' + errorMessage);\n            };\n            worker.addEventListener('message', onMessage);\n            worker.addEventListener('error', onError);\n            timeout = setTimeout(() => onError('timeout'), 3000);\n            QrScanner._loadImage(imageOrFileOrUrl).then(image => {\n                const imageData = QrScanner._getImageData(image, sourceRect, canvas, fixedCanvasSize);\n                worker.postMessage({\n                    type: 'decode',\n                    data: imageData\n                }, [imageData.data.buffer]);\n            }).catch(onError);\n        });\n\n        if (sourceRect && alsoTryWithoutSourceRect) {\n            promise = promise.catch(() => QrScanner.scanImage(imageOrFileOrUrl, null, worker, canvas, fixedCanvasSize));\n        }\n\n        promise = promise.finally(() => {\n            if (!createdNewWorker) return;\n            worker.postMessage({\n                type: 'close'\n            });\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        this._qrWorker.postMessage({\n            type: 'grayscaleWeights',\n            data: { red, green, blue, useIntegerApproximation }\n        });\n    }\n\n    setInversionMode(inversionMode) {\n        this._qrWorker.postMessage({\n            type: 'inversionMode',\n            data: inversionMode\n        });\n    }\n\n    _onPlay() {\n        this._updateSourceRect();\n        this._scanFrame();\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _updateSourceRect() {\n        const smallestDimension = Math.min(this.$video.videoWidth, this.$video.videoHeight);\n        const sourceRectSize = Math.round(2 / 3 * smallestDimension);\n        this._sourceRect.width = this._sourceRect.height = sourceRectSize;\n        this._sourceRect.x = (this.$video.videoWidth - sourceRectSize) / 2;\n        this._sourceRect.y = (this.$video.videoHeight - sourceRectSize) / 2;\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n            QrScanner.scanImage(this.$video, this._sourceRect, this._qrWorker, this.$canvas, true)\n                .then(this._onDecode, (error) => {\n                    if (!this._active) return;\n                    this._onDecodeError(error);\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _onDecodeError(error) {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    _getCameraStream(facingMode, exact = false) {\n        const constraintsToTry = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n\n        if (facingMode) {\n            if (exact) {\n                facingMode = { exact: facingMode };\n            }\n            constraintsToTry.forEach(constraint => constraint.facingMode = facingMode);\n        }\n        return this._getMatchingCameraStream(constraintsToTry);\n    }\n\n    _getCameraTrack() {\n      return this.$video.srcObject.getVideoTracks()[0];\n    }\n\n    _getMatchingCameraStream(constraintsToTry) {\n        if (!navigator.mediaDevices || constraintsToTry.length === 0) {\n            return Promise.reject('Camera not found.');\n        }\n        return navigator.mediaDevices.getUserMedia({\n            video: constraintsToTry.shift()\n        }).catch(() => this._getMatchingCameraStream(constraintsToTry));\n    }\n\n    _setFlashOn(on) {\n      this._flashOn = on;\n      this._getCameraTrack().applyConstraints({\n        advanced: [{ torch: this._flashOn }],\n      });\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _getFacingMode(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    static _getImageData(image, sourceRect=null, canvas=null, fixedCanvasSize=false) {\n        canvas = canvas || document.createElement('canvas');\n        const sourceRectX = sourceRect && sourceRect.x? sourceRect.x : 0;\n        const sourceRectY = sourceRect && sourceRect.y? sourceRect.y : 0;\n        const sourceRectWidth = sourceRect && sourceRect.width? sourceRect.width : image.width || image.videoWidth;\n        const sourceRectHeight = sourceRect && sourceRect.height? sourceRect.height : image.height || image.videoHeight;\n        if (!fixedCanvasSize && (canvas.width !== sourceRectWidth || canvas.height !== sourceRectHeight)) {\n            canvas.width = sourceRectWidth;\n            canvas.height = sourceRectHeight;\n        }\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(image, sourceRectX, sourceRectY, sourceRectWidth, sourceRectHeight, 0, 0, canvas.width, canvas.height);\n        return context.getImageData(0, 0, canvas.width, canvas.height);\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrUrl) {\n        if (imageOrFileOrUrl instanceof HTMLCanvasElement || imageOrFileOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrUrl);\n        } else if (imageOrFileOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrUrl).then(() => imageOrFileOrUrl);\n        } else if (imageOrFileOrUrl instanceof File || imageOrFileOrUrl instanceof URL\n            ||  typeof(imageOrFileOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrUrl instanceof File) {\n                image.src = URL.createObjectURL(imageOrFileOrUrl);\n            } else {\n                image.src = imageOrFileOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrUrl instanceof File) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = 'No QR code found';\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n"],"names":["QrScanner","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","catch","window","getPhotoCapabilities","result","fillLightMode","includes","error","console","warn","Promise","resolve","video","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","bind","canvasSize","DEFAULT_CANVAS_SIZE","preferredFacingMode","$video","$canvas","document","createElement","_onDecode","_preferredFacingMode","_flashOn","_paused","_active","width","height","_sourceRect","x","y","_onPlay","_onVisibilityChange","playsInline","muted","disablePictureInPicture","addEventListener","_qrWorker","Worker","WORKER_PATH","_setFlashOn","removeEventListener","stop","postMessage","type","location","protocol","hidden","clearTimeout","_offTimeout","srcObject","play","facingMode","_getCameraStream","stream","_getFacingMode","_setVideoMirror","e","pause","setTimeout","track","imageOrFileOrUrl","sourceRect","worker","canvas","fixedCanvasSize","alsoTryWithoutSourceRect","createdNewWorker","promise","reject","data","timeout","onMessage","onError","event","NO_QR_CODE_FOUND","_loadImage","image","imageData","buffer","scanImage","finally","red","green","blue","useIntegerApproximation","inversionMode","_updateSourceRect","_scanFrame","start","videoHeight","sourceRectSize","videoWidth","paused","ended","requestAnimationFrame","readyState","log","exact","min","constraintsToTry","forEach","constraint","_getMatchingCameraStream","getVideoTracks","length","getUserMedia","shift","on","_getCameraTrack","applyConstraints","advanced","torch","style","transform","videoStream","test","videoTrack","label","sourceRectWidth","sourceRectHeight","alpha","context","imageSmoothingEnabled","drawImage","sourceRectX","sourceRectY","getImageData","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad"],"mappings":"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"}