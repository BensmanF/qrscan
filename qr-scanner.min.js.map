{"version":3,"file":"qr-scanner.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n        // labels are only readable if served via https and an active media stream exists or permanent permission is\n        // given. That doesn't matter for us though as we don't require labels.\n        return !!navigator.mediaDevices && navigator.mediaDevices.enumerateDevices()\n            .then(devices => devices.some(device => device.kind === 'videoinput'))\n            .catch(() => false);\n    }\n\n    constructor(video, onDecode, canvasSize = QrScanner.DEFAULT_CANVAS_SIZE) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._active = false;\n        this._paused = false;\n\n        this.$canvas.width = canvasSize;\n        this.$canvas.height = canvasSize;\n        this._sourceRect = {\n            x: 0,\n            y: 0,\n            width: canvasSize,\n            height: canvasSize\n        };\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        this.$video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        this.$video.muted = true;\n        this.$video.disablePictureInPicture = true;\n        this.$video.addEventListener('play', this._onPlay);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrWorker = new Worker(QrScanner.WORKER_PATH);\n    }\n\n    destroy() {\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        this._qrWorker.postMessage({\n            type: 'close'\n        });\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        this._paused = false;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        clearTimeout(this._offTimeout);\n        this._offTimeout = null;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        let facingMode = 'environment';\n        return this._getCameraStream('environment', true)\n            .catch(() => {\n                // we (probably) don't have an environment camera\n                facingMode = 'user';\n                return this._getCameraStream(); // throws if camera is not accessible (e.g. due to not https)\n            })\n            .then(stream => {\n                if (this._isUserFacing(stream)) {\n                    // Safari incorrectly returns `user` facing cameras even if `environment` was specified as an exact\n                    // constraint. Thus check whether the stream is user facing and set the facingMode accordingly.\n                    facingMode = 'user';\n                }\n                this.$video.srcObject = stream;\n                this.$video.play();\n                this._setVideoMirror(facingMode);\n            })\n            .catch(e => {\n                this._active = false;\n                throw e;\n            });\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    pause() {\n        this._paused = true;\n        if (!this._active) {\n            return;\n        }\n        this.$video.pause();\n        if (this._offTimeout) {\n            return;\n        }\n        this._offTimeout = setTimeout(() => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop();\n            }\n            this.$video.srcObject = null;\n            this._offTimeout = null;\n        }, 300);\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, sourceRect=null, worker=null, canvas=null, fixedCanvasSize=false,\n                     alsoTryWithoutSourceRect=false) {\n        let createdNewWorker = false;\n        let promise = new Promise((resolve, reject) => {\n            if (!worker) {\n                worker = new Worker(QrScanner.WORKER_PATH);\n                createdNewWorker = true;\n                worker.postMessage({ type: 'inversionMode', data: 'both' }); // scan inverted color qr codes too\n            }\n            let timeout, onMessage, onError;\n            onMessage = event => {\n                if (event.data.type !== 'qrResult') {\n                    return;\n                }\n                worker.removeEventListener('message', onMessage);\n                worker.removeEventListener('error', onError);\n                clearTimeout(timeout);\n                if (event.data.data !== null) {\n                    resolve(event.data.data);\n                } else {\n                    reject('QR code not found.');\n                }\n            };\n            onError = (e) => {\n                worker.removeEventListener('message', onMessage);\n                worker.removeEventListener('error', onError);\n                clearTimeout(timeout);\n                const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                reject('Scanner error: ' + errorMessage);\n            };\n            worker.addEventListener('message', onMessage);\n            worker.addEventListener('error', onError);\n            timeout = setTimeout(() => onError('timeout'), 3000);\n            QrScanner._loadImage(imageOrFileOrUrl).then(image => {\n                const imageData = QrScanner._getImageData(image, sourceRect, canvas, fixedCanvasSize);\n                worker.postMessage({\n                    type: 'decode',\n                    data: imageData\n                }, [imageData.data.buffer]);\n            }).catch(onError);\n        });\n\n        if (sourceRect && alsoTryWithoutSourceRect) {\n            promise = promise.catch(() => QrScanner.scanImage(imageOrFileOrUrl, null, worker, canvas, fixedCanvasSize));\n        }\n\n        promise = promise.finally(() => {\n            if (!createdNewWorker) return;\n            worker.postMessage({\n                type: 'close'\n            });\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        this._qrWorker.postMessage({\n            type: 'grayscaleWeights',\n            data: { red, green, blue, useIntegerApproximation }\n        });\n    }\n\n    setInversionMode(inversionMode) {\n        this._qrWorker.postMessage({\n            type: 'inversionMode',\n            data: inversionMode\n        });\n    }\n\n    _onPlay() {\n        this._updateSourceRect();\n        this._scanFrame();\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _updateSourceRect() {\n        const smallestDimension = Math.min(this.$video.videoWidth, this.$video.videoHeight);\n        const sourceRectSize = Math.round(2 / 3 * smallestDimension);\n        this._sourceRect.width = this._sourceRect.height = sourceRectSize;\n        this._sourceRect.x = (this.$video.videoWidth - sourceRectSize) / 2;\n        this._sourceRect.y = (this.$video.videoHeight - sourceRectSize) / 2;\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n            QrScanner.scanImage(this.$video, this._sourceRect, this._qrWorker, this.$canvas, true)\n                .then(this._onDecode, error => {\n                    if (this._active && error !== 'QR code not found.') {\n                        console.error(error);\n                    }\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _getCameraStream(facingMode, exact = false) {\n        const constraintsToTry = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n\n        if (facingMode) {\n            if (exact) {\n                facingMode = { exact: facingMode };\n            }\n            constraintsToTry.forEach(constraint => constraint.facingMode = facingMode);\n        }\n        return this._getMatchingCameraStream(constraintsToTry);\n    }\n\n    _getMatchingCameraStream(constraintsToTry) {\n        if (!navigator.mediaDevices || constraintsToTry.length === 0) {\n            return Promise.reject('Camera not found.');\n        }\n        return navigator.mediaDevices.getUserMedia({\n            video: constraintsToTry.shift()\n        }).catch(() => this._getMatchingCameraStream(constraintsToTry));\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _isUserFacing(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return false; // assume false\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /front|user|face/i.test(videoTrack.label);\n    }\n\n    static _getImageData(image, sourceRect=null, canvas=null, fixedCanvasSize=false) {\n        canvas = canvas || document.createElement('canvas');\n        const sourceRectX = sourceRect && sourceRect.x? sourceRect.x : 0;\n        const sourceRectY = sourceRect && sourceRect.y? sourceRect.y : 0;\n        const sourceRectWidth = sourceRect && sourceRect.width? sourceRect.width : image.width || image.videoWidth;\n        const sourceRectHeight = sourceRect && sourceRect.height? sourceRect.height : image.height || image.videoHeight;\n        if (!fixedCanvasSize && (canvas.width !== sourceRectWidth || canvas.height !== sourceRectHeight)) {\n            canvas.width = sourceRectWidth;\n            canvas.height = sourceRectHeight;\n        }\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(image, sourceRectX, sourceRectY, sourceRectWidth, sourceRectHeight, 0, 0, canvas.width, canvas.height);\n        return context.getImageData(0, 0, canvas.width, canvas.height);\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrUrl) {\n        if (imageOrFileOrUrl instanceof HTMLCanvasElement || imageOrFileOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrUrl);\n        } else if (imageOrFileOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrUrl).then(() => imageOrFileOrUrl);\n        } else if (imageOrFileOrUrl instanceof File || imageOrFileOrUrl instanceof URL\n            ||  typeof(imageOrFileOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrUrl instanceof File) {\n                image.src = URL.createObjectURL(imageOrFileOrUrl);\n            } else {\n                image.src = imageOrFileOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrUrl instanceof File) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n"],"names":["QrScanner","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","catch","video","onDecode","canvasSize","DEFAULT_CANVAS_SIZE","$video","$canvas","document","createElement","_onDecode","_paused","_active","width","height","_sourceRect","x","y","_onPlay","bind","_onVisibilityChange","playsInline","muted","disablePictureInPicture","addEventListener","_qrWorker","Worker","WORKER_PATH","removeEventListener","stop","postMessage","type","Promise","resolve","window","location","protocol","console","warn","hidden","clearTimeout","_offTimeout","srcObject","play","facingMode","_getCameraStream","stream","_isUserFacing","_setVideoMirror","e","pause","setTimeout","track","imageOrFileOrUrl","sourceRect","worker","canvas","fixedCanvasSize","alsoTryWithoutSourceRect","createdNewWorker","promise","reject","data","timeout","onMessage","onError","event","_loadImage","image","imageData","buffer","scanImage","finally","red","green","blue","useIntegerApproximation","inversionMode","_updateSourceRect","_scanFrame","start","videoHeight","sourceRectSize","videoWidth","paused","ended","requestAnimationFrame","readyState","error","exact","min","constraintsToTry","forEach","constraint","_getMatchingCameraStream","length","getUserMedia","shift","style","transform","videoStream","test","videoTrack","label","sourceRectWidth","sourceRectHeight","alpha","context","imageSmoothingEnabled","drawImage","sourceRectX","sourceRectY","getImageData","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad"],"mappings":"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"}